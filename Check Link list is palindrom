#include<iostream>
#include<vector>
using namespace std;
class Node {
public:
    int data;
    Node* next;

    Node(int val) {
        data = val;
        next = NULL;
    }
};
int main() {
    // Create linked list: 0 -> 2 -> 4 -> 6 -> 8 -> 10
    Node* head = NULL;
    Node* tail = NULL;
    
    int n;
    cout << "Enter the number of nodes: ";
    cin >> n;
    
    cout<<"Enter nodes values"<<endl;
    for (int i = 0; i <n; i ++) {
    	int val;
    	cin>>val;
        Node* node1 = new Node(val);
        if (head == NULL) {
            head = node1;
            tail = node1;
        } else {
            tail->next = node1;
            tail = node1;
        }
    }
//print the link list 
vector<int> my;
Node* temp=head;
while(temp!=NULL){
	cout<<temp->data<<" ";
	my.push_back(temp->data);  //by that put elements in vector
	temp=temp->next;
	
}
//    // Copy linked list into vector
//    vector<int> my;
//    Node* temp = head;
//    while (temp != NULL) {
//        my.push_back(temp->data);
//        temp = temp->next;
//    }

    // Palindrome check using two-pointer approach
    int f = 0;                   // front index
    int b = my.size() - 1;       // back index
    while (f < b) {
        if (my[f] != my[b]) {
            cout << "Linked list is NOT a palindrome" << endl;
            return 0;
        }
        f++;
        b--;
    }

    cout << "Linked list is a palindrome" << endl;
    return 0;
}
